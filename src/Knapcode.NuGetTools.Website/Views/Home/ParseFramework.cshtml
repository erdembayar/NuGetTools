@model SelectedVersionOutput<ParseFrameworkOutput>
@{
    ViewData["Title"] = "Parse Framework";
    var output = Model.Output;
}

<h1>Parse a framework</h1>
<p>
    Enter a NuGet framework to see how it parses. Both short form (e.g. <code>net45</code>) and long form (e.g. <code>.NETFramework,Version=v4.5</code>) are supported.
</p>

<form method="GET" action="">
    <div class="form-group">
        <label for="framework">Framework</label>
        <input type="text" class="form-control framework-short-folder-name-typeahead monospace" name="framework" id="framework"
               autocomplete="off" placeholder="net45" value="@output.Input?.Framework">
    </div>
    <button type="submit" class="btn btn-default">Submit</button>
</form>

<div class="results">
    @if (@output.InputStatus == InputStatus.Valid)
    {
        <div class="alert alert-success" role="alert">
            <p>
                The input value is <b>@output.Input?.Framework</b>.
            </p>
            @try
            {
                <p>The short folder name is <code>@(output.Framework?.ShortFolderName)</code>.</p>
            }
            catch
            {
                <p>
                    <span class="glyphicon glyphicon-alert" aria-hidden="true"></span>
                    While determining the short folder name, an exception was thrown.
                </p>
            }
            <p>The .NET framework name is <code>@output.Framework?.DotNetFrameworkName</code>.</p>
            <p>The framework identifier is <code>@output.Framework?.Identifier</code>.</p>
            <p>The framework version is <code>@output.Framework?.Version</code>.</p>
            <p>The result of <code>ToString()</code> is <code>@output.Framework?.ToStringResult</code>.</p>
            <br />
            @if (output.Framework?.HasProfile == true)
            {
                <p>The framework profile is <code>@output.Framework.Profile</code>.</p>
            }
            else
            {
                <p>There is no framework profile.</p>
            }
            <br />
            @if (output.Framework?.IsPlatformAvailable == true)
            {
                @if (output.Framework?.HasPlatform == true)
                {
                    <p>The platform identifier is <code>@output.Framework.Platform</code>.</p>
                    <p>The platform version is <code>@output.Framework.PlatformVersion</code>.</p>
                }
                else
                {
                    <p>There is no framework platform.</p>
                }
            }
            else
            {
                @:<p>Platform information is only available in NuGet 5.8.0-preview.1 or later.</p>
            }
        </div>
    }
    else if (@output.InputStatus == InputStatus.Invalid)
    {
        <div class="alert alert-danger" role="alert">
            The framework <b>@output.Input?.Framework</b> could not be parsed.
        </div>
    }
</div>
